import 'dart:convert';

import 'package:flutter/material.dart';

import 'package:http/http.dart' as http;
import 'package:restapi/models/GetApisModels/user.dart';

class FetchingUserScreen extends StatefulWidget {
  const FetchingUserScreen({super.key});

  @override
  State<FetchingUserScreen> createState() => _FetchingUserScreenState();
}

class _FetchingUserScreenState extends State<FetchingUserScreen> {
  bool checks = true;
  List<UserModel> getusers = [];
  Future<List<UserModel>> getusersapi() async {
    final response =
        await http.get(Uri.parse('https://jsonplaceholder.typicode.com/users'));
    var data = jsonDecode(response.body.toString());
    if (response.statusCode == 200) {
      for (Map<String, dynamic> i in data) {
        // UserModel photos = UserModel(title: i['id'], url: i['name']);
        // getusers.add(photos);
        // if generated by extension then this line else up two lines
        getusers.add(UserModel.fromJson(i));
      }
      return getusers;
    } else {
      return getusers;
    }
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        centerTitle: true,
        title: InkWell(
          onTap: () {
            checks = !checks;
            setState(() {});
          },
          child: const Text(
            'Fetching User Data',
            style: TextStyle(color: Colors.black),
          ),
        ),
      ),
      body: Column(
        children: [
          Expanded(
            child: FutureBuilder(
                future: getusersapi(),
                builder: ((context, AsyncSnapshot<List<UserModel>> snapshot) {
                  if (!snapshot.hasData) {
                    return const Center(
                      child: CircularProgressIndicator(),
                    );
                  } else {
                    return ListView.builder(
                        itemCount: checks ? getusers.length : 3,
                        itemBuilder: ((context, index) {
                          return ListTile(
                            leading: Text(getusers[index].id.toString()),
                            title: Text(getusers[index].name.toString()),
                            subtitle: Text(getusers[index].email.toString()),
                            trailing: Text(
                                getusers[index].address!.geo!.lat.toString()),
                          );
                        }));
                  }
                })),
          ),
        ],
      ),
    );
  }
}
