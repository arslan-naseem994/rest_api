import 'dart:convert';

import 'package:flutter/material.dart';
import 'package:restapi/models/GetApisModels/post.dart';
import 'package:http/http.dart' as http;

class FetchingPostScreen extends StatefulWidget {
  const FetchingPostScreen({super.key});

  @override
  State<FetchingPostScreen> createState() => _FetchingPostScreenState();
}

class _FetchingPostScreenState extends State<FetchingPostScreen> {
  List<PostModel> getPost = [];
  bool checks = true;
  Future<List<PostModel>> getPostapi() async {
    final response =
        await http.get(Uri.parse('https://jsonplaceholder.typicode.com/posts'));
    var data = jsonDecode(response.body.toString());
    if (response.statusCode == 200) {
      for (Map<String, dynamic> i in data) {
        // if model generated by you
        // PostModel posts = PostModel(
        //     userId: i['userId'],
        //     title: i['title'],
        //     body: i['body'],
        //     id: i['id']);
        // getPost.add(posts);

        // if generated by extension then this line else up two lines
        getPost.add(PostModel.fromJson(i));
      }
      return getPost;
    } else {
      return getPost;
    }
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        centerTitle: true,
        title: InkWell(
          onTap: () {
            checks = !checks;
            setState(() {});
          },
          child: const Text(
            'Fetching Post From Apis',
            style: TextStyle(color: Colors.black),
          ),
        ),
      ),
      body: Column(
        children: [
          Expanded(
            child: FutureBuilder(
                future: getPostapi(),
                builder: ((context, snapshot) {
                  if (!snapshot.hasData) {
                    return const Center(
                      child: CircularProgressIndicator(),
                    );
                  } else {
                    return ListView.builder(
                        itemCount: checks ? getPost.length : 3,
                        itemBuilder: ((context, index) {
                          return ListTile(
                            title: Text(getPost[index].title.toString()),
                            subtitle: Text(getPost[index].body.toString()),
                          );
                        }));
                  }
                })),
          ),
        ],
      ),
    );
  }
}
