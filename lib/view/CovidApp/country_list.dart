import 'dart:convert';

import 'package:flutter/material.dart';

import 'package:http/http.dart' as http;

import 'package:restapi/models/CovidAppModel/country.dart';
import 'package:restapi/services/utils/app_urls.dart';
import 'package:restapi/view/CovidApp/searchtap.dart';
import 'package:shimmer/shimmer.dart';

class CountryStatsScreen extends StatefulWidget {
  const CountryStatsScreen({super.key});

  @override
  State<CountryStatsScreen> createState() => _CountryStatsScreenState();
}

class _CountryStatsScreenState extends State<CountryStatsScreen> {
  TextEditingController searchController = TextEditingController();
  List<CountryModel> getusers = [];

  Future<List<CountryModel>> getusersapi() async {
    final response = await http.get(Uri.parse(AppUrl.countryURL));
    var data = jsonDecode(response.body.toString());
    if (response.statusCode == 200) {
      getusers.clear();
      for (Map<String, dynamic> i in data) {
        // CountryModel photos = CountryModel(title: i['id'], url: i['name']);
        // getusers.add(photos);
        // if generated by extension then this line else up two lines
        getusers.add(CountryModel.fromJson(i));
      }
      return getusers;
    } else {
      return getusers;
    }
  }

  @override
  Widget build(BuildContext context) {
    return PopScope(
      canPop: true,
      child: Scaffold(
        appBar: AppBar(
            centerTitle: true,
            automaticallyImplyLeading: false,
            title: Shimmer.fromColors(
                baseColor: Colors.grey.shade700,
                highlightColor: Colors.grey.shade100,
                child: const Text(
                  'CountryStats',
                  style: TextStyle(color: Colors.black),
                ))),
        body: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: [
            Expanded(
                flex: 0,
                child: Padding(
                  padding: const EdgeInsets.all(8.0),
                  child: TextFormField(
                    onChanged: (value) {
                      setState(() {});
                    },
                    controller: searchController,
                    decoration: const InputDecoration(
                        hintText: 'Search by country name',
                        border: OutlineInputBorder(
                            borderSide: BorderSide(color: Colors.white))),
                  ),
                )),
            Expanded(
              child: FutureBuilder(
                  future: getusersapi(),
                  builder:
                      ((context, AsyncSnapshot<List<CountryModel>> snapshot) {
                    if (!snapshot.hasData) {
                      return ListView.builder(
                          itemCount: 3,
                          itemBuilder: ((context, index) {
                            return Shimmer.fromColors(
                                baseColor: Colors.grey.shade700,
                                highlightColor: Colors.grey.shade100,
                                child: Column(
                                  children: [
                                    ListTile(
                                      leading: Container(
                                          height: 50,
                                          width: 50,
                                          color: Colors.white),
                                      title: Container(
                                          height: 10,
                                          width: 89,
                                          color: Colors.white),
                                      subtitle: Container(
                                          height: 10,
                                          width: 89,
                                          color: Colors.white),
                                    ),
                                  ],
                                ));
                          }));
                    } else {
                      return ListView.builder(
                          itemCount: getusers.length,
                          itemBuilder: ((context, index) {
                            String countryname =
                                getusers[index].countryInfo!.iso3.toString();

                            if (searchController.text.isEmpty) {
                              return InkWell(
                                onTap: () {
                                  Navigator.push(
                                      context,
                                      MaterialPageRoute(
                                          builder: ((context) => DataScreen(
                                                countryname: getusers[index]
                                                    .country
                                                    .toString(),
                                                image: getusers[index]
                                                    .countryInfo!
                                                    .flag
                                                    .toString(),
                                                totalcases: int.parse(
                                                    getusers[index]
                                                        .cases
                                                        .toString()),
                                                totaldeath: int.parse(
                                                    getusers[index]
                                                        .deaths
                                                        .toString()),
                                              ))));
                                },
                                child: ListTile(
                                  leading: CircleAvatar(
                                    backgroundImage: NetworkImage(
                                        getusers[index]
                                            .countryInfo!
                                            .flag
                                            .toString()),
                                  ),
                                  title: Text(getusers[index]
                                      .countryInfo!
                                      .iso3
                                      .toString()),
                                  subtitle:
                                      Text(getusers[index].cases.toString()),
                                ),
                              );
                            } else if (countryname
                                .toLowerCase()
                                .contains(searchController.text.toString())) {
                              return InkWell(
                                onTap: () {
                                  Navigator.push(
                                      context,
                                      MaterialPageRoute(
                                          builder: ((context) => DataScreen(
                                                countryname: getusers[index]
                                                    .country
                                                    .toString(),
                                                image: getusers[index]
                                                    .countryInfo!
                                                    .flag
                                                    .toString(),
                                                totalcases: int.parse(
                                                    getusers[index]
                                                        .cases
                                                        .toString()),
                                                totaldeath: int.parse(
                                                    getusers[index]
                                                        .deaths
                                                        .toString()),
                                              ))));
                                },
                                child: ListTile(
                                  leading: CircleAvatar(
                                    backgroundImage: NetworkImage(
                                        getusers[index]
                                            .countryInfo!
                                            .flag
                                            .toString()),
                                  ),
                                  title: Text(getusers[index]
                                      .countryInfo!
                                      .iso3
                                      .toString()),
                                  subtitle: Text(getusers[index]
                                      .countryInfo!
                                      .lat
                                      .toString()),
                                ),
                              );
                            } else {
                              return Container();
                            }
                          }));
                    }
                  })),
            ),
          ],
        ),
      ),
    );
  }
}
